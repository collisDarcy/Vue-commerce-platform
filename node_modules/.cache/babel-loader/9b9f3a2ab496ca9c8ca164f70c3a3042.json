{"ast":null,"code":"import \"D:\\\\vscode\\u7EC3\\u4E60\\u5305\\\\Vue\\u7535\\u5546\\u9879\\u76EE\\u5B9E\\u6218\\\\demo-vue2.0\\\\node_modules\\\\core-js\\\\modules\\\\es.array.iterator.js\";\nimport \"D:\\\\vscode\\u7EC3\\u4E60\\u5305\\\\Vue\\u7535\\u5546\\u9879\\u76EE\\u5B9E\\u6218\\\\demo-vue2.0\\\\node_modules\\\\core-js\\\\modules\\\\es.promise.js\";\nimport \"D:\\\\vscode\\u7EC3\\u4E60\\u5305\\\\Vue\\u7535\\u5546\\u9879\\u76EE\\u5B9E\\u6218\\\\demo-vue2.0\\\\node_modules\\\\core-js\\\\modules\\\\es.object.assign.js\";\nimport \"D:\\\\vscode\\u7EC3\\u4E60\\u5305\\\\Vue\\u7535\\u5546\\u9879\\u76EE\\u5B9E\\u6218\\\\demo-vue2.0\\\\node_modules\\\\core-js\\\\modules\\\\es.promise.finally.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport Vue from 'vue';\nimport App from './App.vue'; //加载路由模块\n\nimport router from '@/router/router.js'; // 导入组件库--全部的组件库\n\nimport ElementUI, { Message } from 'element-ui'; // 导入样式库\n\nimport 'element-ui/lib/theme-chalk/index.css';\nimport '@/assets/css/gobal.css';\nimport nprogress from 'nprogress';\nimport 'nprogress/nprogress.css'; // 导入axios\n\nimport axios from 'axios'; // 导入插件tree-grid\n\nimport TreeTable from 'vue-table-with-tree-grid'; // 设置请求的的根路径\n// axios.defaults.baseURL = 'http://127.0.0.1:3007'\n\naxios.defaults.baseURL = 'http://127.0.0.1:8888/api/private/v1/'; // 在request拦截器中，展示进度条nprogress.start()\n// 配置axios\n\nVue.prototype.$http = axios; // 设置axios请求拦截器\n\naxios.interceptors.request.use(function (config) {\n  // 为请求头对象，添加Token 验证的Authorization字段\n  config.headers.Authorization = window.sessionStorage.getItem('token');\n  return config;\n}); // 配置Vue插件--全部的组件，使用的时候不用再导入组件\n\nVue.use(ElementUI); // 将弹窗组件挂载到vue的实例对象上面，可以通过this.$message访问\n\nVue.prototype.$message = Message;\nVue.config.productionTip = false; // 将树状图插件全局注册\n\nVue.component('tree-table', TreeTable); // 将富文本编辑器注册为全局可用的组件\n\nimport VueQuillEditor from 'vue-quill-editor'; // 导入富文本编辑器的样式表\n\nimport 'quill/dist/quill.core.css';\nimport 'quill/dist/quill.snow.css';\nimport 'quill/dist/quill.bubble.css';\nVue.use(VueQuillEditor); // 时间格式化的过滤函数\n\nVue.filter('dataFormat', function (originTime) {\n  var dt = new Date(originTime);\n  var y = p(dt.getFullYear());\n  var m = p(dt.getMonth() + 1);\n  var d = p(dt.getDate());\n  var hh = p(dt.getHours());\n  var mm = p(dt.getMinutes());\n  var ss = p(dt.getSeconds());\n  return \"\".concat(y, \"-\").concat(m, \"-\").concat(d, \" \").concat(hh, \":\").concat(mm, \":\").concat(ss);\n}); // 创建补零的函数\n\nfunction p(s) {\n  return s < 10 ? '0' + s : s;\n}\n\nnew Vue({\n  render: function render(h) {\n    return h(App);\n  },\n  router: router\n}).$mount('#app');","map":{"version":3,"sources":["D:/vscode练习包/Vue电商项目实战/demo-vue2.0/src/main.js"],"names":["Vue","App","router","ElementUI","Message","nprogress","axios","TreeTable","defaults","baseURL","prototype","$http","interceptors","request","use","config","headers","Authorization","window","sessionStorage","getItem","$message","productionTip","component","VueQuillEditor","filter","originTime","dt","Date","y","p","getFullYear","m","getMonth","d","getDate","hh","getHours","mm","getMinutes","ss","getSeconds","s","render","h","$mount"],"mappings":";;;;;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,GAAP,MAAgB,WAAhB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,oBAAnB,C,CACA;;AACA,OAAOC,SAAP,IAAoBC,OAApB,QAAmC,YAAnC,C,CACA;;AACA,OAAO,sCAAP;AACA,OAAO,wBAAP;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAO,yBAAP,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,0BAAtB,C,CACA;AACA;;AACAD,KAAK,CAACE,QAAN,CAAeC,OAAf,GAAyB,uCAAzB,C,CACA;AACA;;AACAT,GAAG,CAACU,SAAJ,CAAcC,KAAd,GAAsBL,KAAtB,C,CACA;;AACAA,KAAK,CAACM,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+B,UAACC,MAAD,EAAY;AACzC;AACAA,EAAAA,MAAM,CAACC,OAAP,CAAeC,aAAf,GAA+BC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,OAA9B,CAA/B;AACA,SAAOL,MAAP;AACD,CAJD,E,CAKA;;AACAf,GAAG,CAACc,GAAJ,CAAQX,SAAR,E,CACA;;AACAH,GAAG,CAACU,SAAJ,CAAcW,QAAd,GAAyBjB,OAAzB;AACAJ,GAAG,CAACe,MAAJ,CAAWO,aAAX,GAA2B,KAA3B,C,CACA;;AACAtB,GAAG,CAACuB,SAAJ,CAAc,YAAd,EAA4BhB,SAA5B,E,CACA;;AACA,OAAOiB,cAAP,MAA2B,kBAA3B,C,CACA;;AACA,OAAO,2BAAP;AACA,OAAO,2BAAP;AACA,OAAO,6BAAP;AACAxB,GAAG,CAACc,GAAJ,CAAQU,cAAR,E,CACA;;AACAxB,GAAG,CAACyB,MAAJ,CAAW,YAAX,EAAyB,UAAUC,UAAV,EAAsB;AAC7C,MAAMC,EAAE,GAAG,IAAIC,IAAJ,CAASF,UAAT,CAAX;AACA,MAAMG,CAAC,GAAGC,CAAC,CAACH,EAAE,CAACI,WAAH,EAAD,CAAX;AACA,MAAMC,CAAC,GAAGF,CAAC,CAACH,EAAE,CAACM,QAAH,KAAgB,CAAjB,CAAX;AACA,MAAMC,CAAC,GAAGJ,CAAC,CAACH,EAAE,CAACQ,OAAH,EAAD,CAAX;AACA,MAAMC,EAAE,GAAGN,CAAC,CAACH,EAAE,CAACU,QAAH,EAAD,CAAZ;AACA,MAAMC,EAAE,GAAGR,CAAC,CAACH,EAAE,CAACY,UAAH,EAAD,CAAZ;AACA,MAAMC,EAAE,GAAGV,CAAC,CAACH,EAAE,CAACc,UAAH,EAAD,CAAZ;AACA,mBAAUZ,CAAV,cAAeG,CAAf,cAAoBE,CAApB,cAAyBE,EAAzB,cAA+BE,EAA/B,cAAqCE,EAArC;AACD,CATD,E,CAUA;;AACA,SAASV,CAAT,CAAWY,CAAX,EAAc;AACZ,SAAOA,CAAC,GAAG,EAAJ,GAAS,MAAMA,CAAf,GAAmBA,CAA1B;AACD;;AACD,IAAI1C,GAAJ,CAAQ;AACN2C,EAAAA,MAAM,EAAE,gBAACC,CAAD;AAAA,WAAOA,CAAC,CAAC3C,GAAD,CAAR;AAAA,GADF;AAENC,EAAAA,MAAM,EAANA;AAFM,CAAR,EAGG2C,MAHH,CAGU,MAHV","sourcesContent":["import Vue from 'vue'\nimport App from './App.vue'\n//加载路由模块\nimport router from '@/router/router.js'\n// 导入组件库--全部的组件库\nimport ElementUI, { Message } from 'element-ui'\n// 导入样式库\nimport 'element-ui/lib/theme-chalk/index.css'\nimport '@/assets/css/gobal.css'\nimport nprogress from 'nprogress'\nimport 'nprogress/nprogress.css'\n// 导入axios\nimport axios from 'axios'\n// 导入插件tree-grid\nimport TreeTable from 'vue-table-with-tree-grid'\n// 设置请求的的根路径\n// axios.defaults.baseURL = 'http://127.0.0.1:3007'\naxios.defaults.baseURL = 'http://127.0.0.1:8888/api/private/v1/'\n// 在request拦截器中，展示进度条nprogress.start()\n// 配置axios\nVue.prototype.$http = axios\n// 设置axios请求拦截器\naxios.interceptors.request.use((config) => {\n  // 为请求头对象，添加Token 验证的Authorization字段\n  config.headers.Authorization = window.sessionStorage.getItem('token')\n  return config\n})\n// 配置Vue插件--全部的组件，使用的时候不用再导入组件\nVue.use(ElementUI)\n// 将弹窗组件挂载到vue的实例对象上面，可以通过this.$message访问\nVue.prototype.$message = Message\nVue.config.productionTip = false\n// 将树状图插件全局注册\nVue.component('tree-table', TreeTable)\n// 将富文本编辑器注册为全局可用的组件\nimport VueQuillEditor from 'vue-quill-editor'\n// 导入富文本编辑器的样式表\nimport 'quill/dist/quill.core.css'\nimport 'quill/dist/quill.snow.css'\nimport 'quill/dist/quill.bubble.css'\nVue.use(VueQuillEditor)\n// 时间格式化的过滤函数\nVue.filter('dataFormat', function (originTime) {\n  const dt = new Date(originTime)\n  const y = p(dt.getFullYear())\n  const m = p(dt.getMonth() + 1)\n  const d = p(dt.getDate())\n  const hh = p(dt.getHours())\n  const mm = p(dt.getMinutes())\n  const ss = p(dt.getSeconds())\n  return `${y}-${m}-${d} ${hh}:${mm}:${ss}`\n})\n// 创建补零的函数\nfunction p(s) {\n  return s < 10 ? '0' + s : s\n}\nnew Vue({\n  render: (h) => h(App),\n  router,\n}).$mount('#app')\n"]},"metadata":{},"sourceType":"module"}