{"ast":null,"code":"import _asyncToGenerator from \"D:/vscode\\u7EC3\\u4E60\\u5305/Vue\\u7535\\u5546\\u9879\\u76EE\\u5B9E\\u6218/demo-vue2.0/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      cateList: [],\n      // 级联选择框的配置对象\n      cateProps: {\n        value: 'cat_id',\n        label: 'cat_name',\n        children: 'children'\n      },\n      //级联选择框双向绑定到的数组\n      selectedCateKeys: [],\n      //  被激活的页签的名称\n      activeName: 'first'\n    };\n  },\n  created: function created() {\n    this.getCateList();\n  },\n  methods: {\n    // 获取所有的商品分类列表\n    getCateList: function getCateList() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _yield$_this$$http$ge, res;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.$http.get('categories');\n\n              case 2:\n                _yield$_this$$http$ge = _context.sent;\n                res = _yield$_this$$http$ge.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", _this.$message.error({\n                  message: '获取商品分类失败！',\n                  center: true\n                }));\n\n              case 6:\n                _this.cateList = res.data;\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    // 级联选择框选中项变化，会触发这个函数\n    handleChange: function handleChange() {\n      // console.log(this.selectedCateKeys)\n      // 证明选中的不是三级分类\n      if (this.selectedCateKeys.length !== 3) {\n        this.selectedCateKeys = [];\n        return;\n      } // 证明选中的是三级分类\n\n\n      console.log(this.selectedCateKeys);\n    },\n    // tab页签点击事件的处理函数\n    handleTabClick: function handleTabClick() {\n      console.log(this.activeName);\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACAA,MADA,kBACA;AACA;AACAC,kBADA;AAEA;AACAC;AACAC,uBADA;AAEAC,yBAFA;AAGAC;AAHA,OAHA;AAQA;AACAC,0BATA;AAUA;AACAC;AAXA;AAaA,GAfA;AAgBAC,SAhBA,qBAgBA;AACA;AACA,GAlBA;AAmBAC;AACA;AACAC,eAFA,yBAEA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,6BADA;;AAAA;AAAA;AACAC,mBADA,yBACAX,IADA;;AAAA,sBAEAW,uBAFA;AAAA;AAAA;AAAA;;AAAA,iDAGA;AACAC,sCADA;AAEAC;AAFA,kBAHA;;AAAA;AAQA;;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,KAXA;AAYA;AACAC,gBAbA,0BAaA;AACA;AACA;AACA;AACA;AACA;AACA,OANA,CAOA;;;AACAC;AACA,KAtBA;AAuBA;AACAC,kBAxBA,4BAwBA;AACAD;AACA;AA1BA;AAnBA","names":["data","cateList","cateProps","value","label","children","selectedCateKeys","activeName","created","methods","getCateList","res","message","center","handleChange","console","handleTabClick"],"sourceRoot":"src/components/goods","sources":["ParamsV.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- <p>这是参数组件</p> -->\r\n    <!-- 面包屑导航 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/FirstPage' }\">首页</el-breadcrumb-item>\r\n      <!-- <el-breadcrumb-item><a href=\"/\">用户登录</a></el-breadcrumb-item> -->\r\n      <el-breadcrumb-item>商品列表</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品分类</el-breadcrumb-item>\r\n      <el-breadcrumb-item><a href=\"javascripe:;\">分类参数</a></el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!-- 卡片视图区域 -->\r\n    <el-card>\r\n      <!-- 警告区域 -->\r\n      <el-alert title=\"注意:只允许为第三级分类设置相关参数!\" type=\"warning\" effect=\"dark\" :closable=\"false\" center show-icon> </el-alert>\r\n      <!-- 选择商品分类区域 -->\r\n      <el-row>\r\n        <el-col>\r\n          <span>选择商品分类:</span>\r\n          <!-- 选择商品分类的级联选择框 -->\r\n          <el-cascader expand-trigger=\"hover\" v-model=\"selectedCateKeys\" :options=\"cateList\" :props=\"cateProps\" @change=\"handleChange\"></el-cascader>\r\n        </el-col>\r\n      </el-row>\r\n      <!-- tab页签区域 -->\r\n      <el-tabs v-model=\"activeName\" @tab-click=\"handleTabClick\">\r\n        <el-tab-pane label=\"动态参数\" name=\"first\">动态参数</el-tab-pane>\r\n        <el-tab-pane label=\"静态属性\" name=\"second\">静态属性</el-tab-pane>\r\n      </el-tabs>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      cateList: [],\r\n      // 级联选择框的配置对象\r\n      cateProps: {\r\n        value: 'cat_id',\r\n        label: 'cat_name',\r\n        children: 'children',\r\n      },\r\n      //级联选择框双向绑定到的数组\r\n      selectedCateKeys: [],\r\n      //  被激活的页签的名称\r\n      activeName: 'first',\r\n    }\r\n  },\r\n  created() {\r\n    this.getCateList()\r\n  },\r\n  methods: {\r\n    // 获取所有的商品分类列表\r\n    async getCateList() {\r\n      const { data: res } = await this.$http.get('categories')\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error({\r\n          message: '获取商品分类失败！',\r\n          center: true,\r\n        })\r\n      }\r\n      this.cateList = res.data\r\n    },\r\n    // 级联选择框选中项变化，会触发这个函数\r\n    handleChange() {\r\n      // console.log(this.selectedCateKeys)\r\n      // 证明选中的不是三级分类\r\n      if (this.selectedCateKeys.length !== 3) {\r\n        this.selectedCateKeys = []\r\n        return\r\n      }\r\n      // 证明选中的是三级分类\r\n      console.log(this.selectedCateKeys)\r\n    },\r\n    // tab页签点击事件的处理函数\r\n    handleTabClick() {\r\n      console.log(this.activeName)\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.el-breadcrumb {\r\n  margin-bottom: 22px;\r\n  font-size: 17px;\r\n  font-family: cursive;\r\n  /deep/a {\r\n    color: red;\r\n  }\r\n}\r\n.el-card {\r\n  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.25);\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}