{"ast":null,"code":"// 创建路由模块\n// 导入Vue\nimport Vue from 'vue'; // 导入Vue-route\n\nimport VueRouter from 'vue-router'; //  创建Vue插件\n\nVue.use(VueRouter); // 导入路由\n\nimport Login from '@/components/LoginV.vue';\nimport Index from '@/components/IndexV.vue'; //导入登陆后加载的子路由\n\nimport FirstPage from '@/components/FirstPage.vue';\nimport user from '@/components/user/userV.vue'; // 导入权限管理模块\n\nimport Rights from '@/components/power/RightV.vue';\nimport Roles from '@/components/power/RolesV.vue';\nimport Cate from '@/components/goods/CateV.vue';\nimport Params from '@/components/goods/ParamsV.vue'; // 导入商品列表模块\n\nimport GoodsList from '@/components/goods/goods_List.vue';\nimport add from '@/components/goods/AddV.vue'; // 导入商品订单模块\n\nimport order from '@/components/order/OrderV.vue'; // 导入数据报表组件\n\nimport report from '@/components/report/ReportV.vue';\nconst router = new VueRouter({\n  routes: [{\n    path: '/login',\n    component: Login\n  }, {\n    path: '/',\n    redirect: '/login'\n  }, {\n    path: '/index',\n    component: Index,\n    redirect: '/FirstPage',\n    children: [{\n      path: '/FirstPage',\n      component: FirstPage\n    }, {\n      path: '/users',\n      component: user\n    }, {\n      path: '/rights',\n      component: Rights\n    }, {\n      path: '/roles',\n      component: Roles\n    }, {\n      path: '/categories',\n      component: Cate\n    }, {\n      path: '/params',\n      component: Params\n    }, {\n      path: '/goods',\n      component: GoodsList\n    }, {\n      path: '/goods/add',\n      component: add\n    }, {\n      path: '/orders',\n      component: order\n    }, {\n      path: '/reports',\n      component: report\n    }]\n  }]\n}); // 为路由对象添加beforeEach导航守卫\n\nrouter.beforeEach((to, from, next) => {\n  //to:要访问的路径\n  if (to.path === '/login') {\n    return next();\n  } // 从sessionStorage中获得保存的token值\n\n\n  const tokenStr = window.sessionStorage.getItem('token');\n\n  if (!tokenStr) {\n    //没有token,则强制跳转到登录页面\n    return next('/login');\n  }\n\n  next(); //next:是否放行next();next('/路径'):强制跳转页面\n}); // 向外共享router规则----export\n\nexport default router;","map":{"version":3,"sources":["D:/vscode练习包/Vue电商项目实战/demo-vue2.0/src/router/router.js"],"names":["Vue","VueRouter","use","Login","Index","FirstPage","user","Rights","Roles","Cate","Params","GoodsList","add","order","report","router","routes","path","component","redirect","children","beforeEach","to","from","next","tokenStr","window","sessionStorage","getItem"],"mappings":"AAAA;AACA;AACA,OAAOA,GAAP,MAAgB,KAAhB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACAD,GAAG,CAACE,GAAJ,CAAQD,SAAR,E,CACA;;AACA,OAAOE,KAAP,MAAkB,yBAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,IAAP,MAAiB,6BAAjB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,OAAOC,MAAP,MAAmB,gCAAnB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,GAAP,MAAgB,6BAAhB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,+BAAlB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,MAAMC,MAAM,GAAG,IAAId,SAAJ,CAAc;AAC3Be,EAAAA,MAAM,EAAE,CACN;AAAEC,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,SAAS,EAAEf;AAA7B,GADM,EAEN;AAAEc,IAAAA,IAAI,EAAE,GAAR;AAAaE,IAAAA,QAAQ,EAAE;AAAvB,GAFM,EAGN;AACEF,IAAAA,IAAI,EAAE,QADR;AAEEC,IAAAA,SAAS,EAAEd,KAFb;AAGEe,IAAAA,QAAQ,EAAE,YAHZ;AAIEC,IAAAA,QAAQ,EAAE,CACR;AAAEH,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,SAAS,EAAEb;AAAjC,KADQ,EAER;AACEY,MAAAA,IAAI,EAAE,QADR;AAEEC,MAAAA,SAAS,EAAEZ;AAFb,KAFQ,EAMR;AAAEW,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,SAAS,EAAEX;AAA9B,KANQ,EAOR;AAAEU,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,SAAS,EAAEV;AAA7B,KAPQ,EAQR;AAAES,MAAAA,IAAI,EAAE,aAAR;AAAuBC,MAAAA,SAAS,EAAET;AAAlC,KARQ,EASR;AAAEQ,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,SAAS,EAAER;AAA9B,KATQ,EAUR;AAAEO,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,SAAS,EAAEP;AAA7B,KAVQ,EAWR;AAAEM,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,SAAS,EAAEN;AAAjC,KAXQ,EAYR;AAAEK,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,SAAS,EAAEL;AAA9B,KAZQ,EAaR;AAACI,MAAAA,IAAI,EAAC,UAAN;AAAmBC,MAAAA,SAAS,EAAEJ;AAA9B,KAbQ;AAJZ,GAHM;AADmB,CAAd,CAAf,C,CA0BA;;AACAC,MAAM,CAACM,UAAP,CAAkB,CAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,KAAoB;AACpC;AACA,MAAIF,EAAE,CAACL,IAAH,KAAY,QAAhB,EAA0B;AACxB,WAAOO,IAAI,EAAX;AACD,GAJmC,CAKpC;;;AACA,QAAMC,QAAQ,GAAGC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,OAA9B,CAAjB;;AACA,MAAI,CAACH,QAAL,EAAe;AACb;AACA,WAAOD,IAAI,CAAC,QAAD,CAAX;AACD;;AACDA,EAAAA,IAAI,GAXgC,CAYpC;AACD,CAbD,E,CAeA;;AACA,eAAeT,MAAf","sourcesContent":["// 创建路由模块\n// 导入Vue\nimport Vue from 'vue'\n// 导入Vue-route\nimport VueRouter from 'vue-router'\n//  创建Vue插件\nVue.use(VueRouter)\n// 导入路由\nimport Login from '@/components/LoginV.vue'\nimport Index from '@/components/IndexV.vue'\n//导入登陆后加载的子路由\nimport FirstPage from '@/components/FirstPage.vue'\nimport user from '@/components/user/userV.vue'\n// 导入权限管理模块\nimport Rights from '@/components/power/RightV.vue'\nimport Roles from '@/components/power/RolesV.vue'\nimport Cate from '@/components/goods/CateV.vue'\nimport Params from '@/components/goods/ParamsV.vue'\n// 导入商品列表模块\nimport GoodsList from '@/components/goods/goods_List.vue'\nimport add from '@/components/goods/AddV.vue'\n// 导入商品订单模块\nimport order from '@/components/order/OrderV.vue'\n// 导入数据报表组件\nimport report from '@/components/report/ReportV.vue'\nconst router = new VueRouter({\n  routes: [\n    { path: '/login', component: Login },\n    { path: '/', redirect: '/login' },\n    {\n      path: '/index',\n      component: Index,\n      redirect: '/FirstPage',\n      children: [\n        { path: '/FirstPage', component: FirstPage },\n        {\n          path: '/users',\n          component: user,\n        },\n        { path: '/rights', component: Rights },\n        { path: '/roles', component: Roles },\n        { path: '/categories', component: Cate },\n        { path: '/params', component: Params },\n        { path: '/goods', component: GoodsList },\n        { path: '/goods/add', component: add },\n        { path: '/orders', component: order },\n        {path:'/reports',  component: report}\n      ],\n    },\n  ],\n})\n// 为路由对象添加beforeEach导航守卫\nrouter.beforeEach((to, from, next) => {\n  //to:要访问的路径\n  if (to.path === '/login') {\n    return next()\n  }\n  // 从sessionStorage中获得保存的token值\n  const tokenStr = window.sessionStorage.getItem('token')\n  if (!tokenStr) {\n    //没有token,则强制跳转到登录页面\n    return next('/login')\n  }\n  next()\n  //next:是否放行next();next('/路径'):强制跳转页面\n})\n\n// 向外共享router规则----export\nexport default router\n"]},"metadata":{},"sourceType":"module"}