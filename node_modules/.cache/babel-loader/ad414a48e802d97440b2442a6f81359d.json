{"ast":null,"code":"import _asyncToGenerator from \"D:/vscode\\u7EC3\\u4E60\\u5305/Vue\\u7535\\u5546\\u9879\\u76EE\\u5B9E\\u6218/demo-vue2.0/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    // document.querySelector('.list').classList.remove('.el-breadcrumb__inner')\n    return {\n      queryInfo: {\n        query: '',\n        // 查询参数\n        pagenum: 1,\n        //当前页码\n        pagesize: 10 // 每页显示条数\n\n      },\n      // 商品列表\n      goodsList: [],\n      // 总数据条数\n      total: 0\n    };\n  },\n  created: function created() {\n    this.getGoodsList();\n  },\n  methods: {\n    // 根据分页获取对应的商品列表\n    getGoodsList: function getGoodsList() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _yield$_this$$http$ge, res;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.$http.get('goods', {\n                  params: _this.queryInfo\n                });\n\n              case 2:\n                _yield$_this$$http$ge = _context.sent;\n                res = _yield$_this$$http$ge.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", _this.$message.error({\n                  message: '获取商品列表失败！',\n                  center: true\n                }));\n\n              case 6:\n                _this.$message.success({\n                  message: '获取商品列表成功！',\n                  center: true\n                });\n\n                console.log(res.data);\n                _this.goodsList = res.data.goods;\n                _this.total = res.data.total;\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    handleSizeChange: function handleSizeChange(newSize) {\n      this.queryInfo.pagesize = newSize;\n      this.getGoodsList();\n    },\n    handleCurrentChange: function handleCurrentChange(newPage) {\n      this.queryInfo.pagenum = newPage;\n      this.getGoodsList();\n    },\n    // 删除商品\n    removeById: function removeById(id) {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var confirmResult, _yield$_this2$$http$d, res;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _this2.$confirm('此操作将永久删除该商品，是否继续?', '提示', {\n                  confirmButtonText: '确定',\n                  cancelButtonText: '取消',\n                  type: 'warning'\n                }).catch(function (err) {\n                  return err;\n                });\n\n              case 2:\n                confirmResult = _context2.sent;\n\n                if (!(confirmResult !== 'confirm')) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", _this2.$message.info({\n                  message: '已经取消删除！',\n                  center: true\n                }));\n\n              case 5:\n                _context2.next = 7;\n                return _this2.$http.delete(\"goods/\".concat(id));\n\n              case 7:\n                _yield$_this2$$http$d = _context2.sent;\n                res = _yield$_this2$$http$d.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context2.next = 11;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", _this2.$message.error({\n                  message: '删除失败！',\n                  center: true\n                }));\n\n              case 11:\n                _this2.$message.success({\n                  message: '删除成功！',\n                  center: true\n                });\n\n                _this2.getGoodsList();\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    // 添加商品\n    goAddpage: function goAddpage() {\n      this.$router.push('/goods/add');\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;AACAA,MADA,kBACA;AACA;AACA;AACAC;AACAC,iBADA;AACA;AACAC,kBAFA;AAEA;AACAC,oBAHA,CAGA;;AAHA,OADA;AAMA;AACAC,mBAPA;AAQA;AACAC;AATA;AAWA,GAdA;AAeAC,SAfA,qBAeA;AACA;AACA,GAjBA;AAkBAC;AACA;AACAC,gBAFA,0BAEA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA;AAAAC;AAAA,kBADA;;AAAA;AAAA;AACAC,mBADA,yBACAX,IADA;;AAAA,sBAEAW,uBAFA;AAAA;AAAA;AAAA;;AAAA,iDAGA;AACAC,sCADA;AAEAC;AAFA,kBAHA;;AAAA;AAQA;AACAD,sCADA;AAEAC;AAFA;;AAIAC;AACA;AACA;;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA,KAjBA;AAkBAC,oBAlBA,4BAkBAC,OAlBA,EAkBA;AACA;AACA;AACA,KArBA;AAsBAC,uBAtBA,+BAsBAC,OAtBA,EAsBA;AACA;AACA;AACA,KAzBA;AA0BA;AACAC,cA3BA,sBA2BAC,EA3BA,EA2BA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA;AACAC,yCADA;AAEAC,wCAFA;AAGAC;AAHA,mBAIAC,KAJA,CAIA;AAAA;AAAA,iBAJA,CADA;;AAAA;AACAC,6BADA;;AAAA,sBAOAA,2BAPA;AAAA;AAAA;AAAA;;AAAA,kDAQA;AACAb,oCADA;AAEAC;AAFA,kBARA;;AAAA;AAAA;AAAA,uBAcA,wCAdA;;AAAA;AAAA;AAcAF,mBAdA,yBAcAX,IAdA;;AAAA,sBAeAW,uBAfA;AAAA;AAAA;AAAA;;AAAA,kDAgBA;AACAC,kCADA;AAEAC;AAFA,kBAhBA;;AAAA;AAqBA;AACAD,kCADA;AAEAC;AAFA;;AAIA;;AAzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0BA,KArDA;AAsDA;AACAa,aAvDA,uBAuDA;AACA;AACA;AAzDA;AAlBA","names":["data","queryInfo","query","pagenum","pagesize","goodsList","total","created","methods","getGoodsList","params","res","message","center","console","handleSizeChange","newSize","handleCurrentChange","newPage","removeById","id","confirmButtonText","cancelButtonText","type","catch","confirmResult","goAddpage"],"sourceRoot":"src/components/goods","sources":["goods_List.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- <p>这是商品列表组件</p> -->\r\n    <!-- 面包屑导航 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/FirstPage' }\">首页</el-breadcrumb-item>\r\n      <!-- <el-breadcrumb-item><a href=\"/\">用户登录</a></el-breadcrumb-item> -->\r\n      <el-breadcrumb-item class=\"list\">商品列表</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品分类</el-breadcrumb-item>\r\n      <el-breadcrumb-item>分类参数</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!-- 卡片视图区域 -->\r\n    <el-card>\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"8\">\r\n          <el-input placeholder=\"请输入内容\" v-model=\"queryInfo.query\" clearable @keydown.enter.native=\"getGoodsList\" @clear=\"getGoodsList\">\r\n            <el-button slot=\"append\" icon=\"el-icon-search\" width=\"60px\" @click=\"getGoodsList\"></el-button>\r\n          </el-input>\r\n        </el-col>\r\n        <el-col :span=\"4\">\r\n          <el-button type=\"primary\" @click=\"goAddpage\">添加商品</el-button>\r\n        </el-col>\r\n      </el-row>\r\n      <!-- table表格区域 -->\r\n      <el-table :data=\"goodsList\" border stripe>\r\n        <el-table-column type=\"index\" label=\"#\"></el-table-column>\r\n        <el-table-column label=\"商品名称\" prop=\"goods_name\"></el-table-column>\r\n        <el-table-column label=\"商品价格(元)\" prop=\"goods_price\" width=\"75px\"></el-table-column>\r\n        <el-table-column label=\"商品重量\" prop=\"goods_weight\" width=\"80px\"></el-table-column>\r\n        <el-table-column label=\"创建时间\" prop=\"add_time\" width=\"140px\">\r\n          <template slot-scope=\"scope\">\r\n            <!-- {{ scope.row.add_time | dataFormat }} -->\r\n            {{ scope.row.add_time }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"180px\">\r\n          <template slot-scope=\"scope\">\r\n            <!-- {{ scope.row }} -->\r\n            <el-button type=\"primary\" size=\"mini\" icon=\"el-icon-edit\">修改</el-button>\r\n            <el-button type=\"danger\" size=\"mini\" icon=\"el-icon-delete\" @click=\"removeById(scope.row.goods_id)\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <!-- 分页区域 -->\r\n      <el-pagination background @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page.sync=\"queryInfo.pagenum\" :page-sizes=\"[10, 20, 30, 40]\" :page-size=\"queryInfo.pagesize\" layout=\"sizes, prev, pager, next\" :total=\"total\"> </el-pagination>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    // document.querySelector('.list').classList.remove('.el-breadcrumb__inner')\r\n    return {\r\n      queryInfo: {\r\n        query: '', // 查询参数\r\n        pagenum: 1, //当前页码\r\n        pagesize: 10, // 每页显示条数\r\n      },\r\n      // 商品列表\r\n      goodsList: [],\r\n      // 总数据条数\r\n      total: 0,\r\n    }\r\n  },\r\n  created() {\r\n    this.getGoodsList()\r\n  },\r\n  methods: {\r\n    // 根据分页获取对应的商品列表\r\n    async getGoodsList() {\r\n      const { data: res } = await this.$http.get('goods', { params: this.queryInfo })\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error({\r\n          message: '获取商品列表失败！',\r\n          center: true,\r\n        })\r\n      }\r\n      this.$message.success({\r\n        message: '获取商品列表成功！',\r\n        center: true,\r\n      })\r\n      console.log(res.data)\r\n      this.goodsList = res.data.goods\r\n      this.total = res.data.total\r\n    },\r\n    handleSizeChange(newSize) {\r\n      this.queryInfo.pagesize = newSize\r\n      this.getGoodsList()\r\n    },\r\n    handleCurrentChange(newPage) {\r\n      this.queryInfo.pagenum = newPage\r\n      this.getGoodsList()\r\n    },\r\n    // 删除商品\r\n    async removeById(id) {\r\n      const confirmResult = await this.$confirm('此操作将永久删除该商品，是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning',\r\n      }).catch((err) => err)\r\n      // 删除取消\r\n      if (confirmResult !== 'confirm') {\r\n        return this.$message.info({\r\n          message: '已经取消删除！',\r\n          center: true,\r\n        })\r\n      }\r\n      //删除成功！\r\n      const { data: res } = await this.$http.delete(`goods/${id}`)\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error({\r\n          message: '删除失败！',\r\n          center: true,\r\n        })\r\n      }\r\n      this.$message.success({\r\n        message: '删除成功！',\r\n        center: true,\r\n      })\r\n      this.getGoodsList()\r\n    },\r\n    // 添加商品\r\n    goAddpage() {\r\n      this.$router.push('/goods/add')\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.el-breadcrumb {\r\n  margin-bottom: 22px;\r\n  font-size: 17px;\r\n  font-family: cursive;\r\n}\r\n.el-card {\r\n  margin-top: 18px;\r\n  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.25);\r\n}\r\n/deep/.list {\r\n  color: red;\r\n  font-size: 18px;\r\n  font-family: kaiti;\r\n  font-weight: bolder;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}