{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import axios from 'axios'\n// import VueAxios from 'vue-axios'\n// import reguser from '@/components/reguserV.vue'\nexport default {\n  name: \"LoginV\",\n  data: function data() {\n    var _this = this;\n\n    // 判断两次密码是否相同\n    var validatePassword = function validatePassword(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('密码不能为空!'));\n      }\n\n      if (value === \"\") {\n        callback(new Error(\"请输入密码\"));\n      } else {\n        if (_this.loginForm.checkPassword !== \"\") {\n          _this.$refs.loginForm.validateField(\"checkPassword\");\n        }\n\n        callback();\n      }\n    }; // var validatePassword2 = (rule, value, callback) => {\n    //   if (value === \"\") {\n    //     callback(new Error(\"请再次输入密码\"));\n    //   } else if (value !== this.loginForm.password) {\n    //     callback(new Error(\"两次输入密码不一致!\"));\n    //   } else {\n    //     callback();\n    //   }\n    // };\n\n\n    return {\n      loginForm: {\n        username: \"\",\n        password: \"\" // checkPassword: \"\",\n\n      },\n      // 验证规则对象\n      rules: {\n        password: [{\n          validator: validatePassword,\n          trigger: \"blur\",\n          required: true\n        }, {\n          min: 3,\n          max: 10,\n          message: '长度在3到10个字符',\n          trigger: 'blur'\n        }],\n        // checkPassword: [{ validator: validatePassword2, trigger: \"blur\",required:true}],\n        username: [{\n          required: true,\n          message: '请输入用户名！',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 10,\n          message: '长度在3到10个字符',\n          trigger: 'blur'\n        }]\n      },\n      message: ''\n    };\n  },\n  methods: {\n    Login: function Login() {\n      var _this2 = this;\n\n      this.$http.post('/api/login', {\n        username: this.loginForm.username,\n        password: this.loginForm.password\n      }).then(function (res) {\n        // alert('登陆成功！');\n        if (res.data.status === 0) {\n          console.log('登录成功！');\n          alert('登录成功！');\n\n          _this2.$router.push('/reguser');\n        } else {\n          alert('登录失败！');\n          console.log(res.data.message);\n        }\n      }).catch(function () {\n        // console.log()\n        alert('登录失败！---');\n      });\n    },\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoEA;AACA;AACA;AACA;AACAA,gBADA;AAEAC,MAFA,kBAEA;AAAA;;AACA;AACA;AACA;AACAC;AACA;;AACA;AACAA;AACA,OAFA,MAEA;AACA;AACA;AACA;;AACAA;AACA;AACA,KAZA,CAFA,CAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACAC;AACAC,oBADA;AAEAC,oBAFA,CAGA;;AAHA,OADA;AAMA;AACAC;AACAD;AAAAE;AAAAC;AAAAC;AAAA,WACA;AAAAC;AAAAC;AAAAC;AAAAJ;AAAA,SADA,CADA;AAIA;AACAJ,mBACA;AAAAK;AAAAG;AAAAJ;AAAA,SADA,EAEA;AAAAE;AAAAC;AAAAC;AAAAJ;AAAA,SAFA;AALA,OAPA;AAiBAI;AAjBA;AAmBA,GA7CA;AA8CAC;AACAC,SADA,mBACA;AAAA;;AACA;AACAV,yCADA;AAEAC;AAFA,SAGAU,IAHA,CAGA;AACA;AACA;AACAC;AACAC;;AACA;AACA,SAJA,MAIA;AACAA;AACAD;AACA;AACA,OAbA,EAaAE,KAbA,CAaA;AACA;AACAD;AACA,OAhBA;AAkBA,KApBA;AAqBAE,aArBA,qBAqBAC,QArBA,EAqBA;AACA;AACA;AAvBA;AA9CA","names":["name","data","callback","loginForm","username","password","rules","validator","trigger","required","min","max","message","methods","Login","then","console","alert","catch","resetForm","formName"],"sourceRoot":"src/components","sources":["LoginV.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <p align=\"center\" style=\"font-size: 20px; color: red;\">{{message}}</p>\r\n    <div id=\"login-box\">\r\n      <!-- 图像区域 -->\r\n      <div class=\"login-head\">\r\n        <img src=\"../assets/02.gif\" alt=\"\" />\r\n      </div>\r\n      <!-- 表单区域 -->\r\n      <el-form\r\n        label-width=\"83px\"\r\n        class=\"fm\"\r\n        :model=\"loginForm\"\r\n        status-icon\r\n        :rules=\"rules\"\r\n        ref=\"loginForm\"\r\n        @submit.prevent.native=\"Login\"\r\n      >\r\n        <!-- 用户名 -->\r\n        <el-form-item label=\"用户名:\" prop=\"username\">\r\n          <el-input\r\n            prefix-icon=\"el-icon-user-solid\"\r\n            v-model=\"loginForm.username\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <!-- 密码 -->\r\n        <el-form-item label=\"用户密码:\" class=\"psd\" prop=\"password\">\r\n          <el-input\r\n            type=\"password\"\r\n            prefix-icon=\"el-icon-lock\"\r\n            show-password\r\n            v-model=\"loginForm.password\"\r\n            autocomplete=\"off\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <!-- 确认密码\r\n        <el-form-item label=\"确认密码:\" prop=\"checkPassword\">\r\n          <el-input\r\n            type=\"passwordword\"\r\n            prefix-icon=\"el-icon-lock\"\r\n            show-passwordword\r\n            v-model=\"loginForm.checkPassword\"\r\n            autocomplete=\"off\"\r\n          ></el-input>\r\n        </el-form-item> -->\r\n        <!-- 按钮区域 -->\r\n        <el-form-item class=\"btn\">\r\n          <el-button\r\n            type=\"primary\"\r\n            plain\r\n            class=\"btn1\"\r\n            @click=\"Login\"\r\n            >登录</el-button\r\n          >\r\n          <el-button\r\n            type=\"primary\"\r\n            plain\r\n            class=\"btn2\"\r\n            @click=\"resetForm('loginForm')\"\r\n            >重置</el-button\r\n          >\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import axios from 'axios'\r\n// import VueAxios from 'vue-axios'\r\n// import reguser from '@/components/reguserV.vue'\r\nexport default {\r\n  name: \"LoginV\",\r\n  data() {\r\n    // 判断两次密码是否相同\r\n    var validatePassword = (rule, value, callback) => {\r\n      if(value===''){\r\n        callback(new Error('密码不能为空!'))\r\n      }\r\n      if (value === \"\") {\r\n        callback(new Error(\"请输入密码\"));\r\n      } else {\r\n        if (this.loginForm.checkPassword !== \"\") {\r\n          this.$refs.loginForm.validateField(\"checkPassword\");\r\n        }\r\n        callback();\r\n      }\r\n    };\r\n    // var validatePassword2 = (rule, value, callback) => {\r\n    //   if (value === \"\") {\r\n    //     callback(new Error(\"请再次输入密码\"));\r\n    //   } else if (value !== this.loginForm.password) {\r\n    //     callback(new Error(\"两次输入密码不一致!\"));\r\n    //   } else {\r\n    //     callback();\r\n    //   }\r\n    // };\r\n    return {\r\n      loginForm: {\r\n        username: \"\",\r\n        password: \"\",\r\n        // checkPassword: \"\",\r\n      },\r\n      // 验证规则对象\r\n      rules: {\r\n        password: [{ validator: validatePassword, trigger: \"blur\",required:true },\r\n        { min: 3, max: 10, message: '长度在3到10个字符', trigger: 'blur' }\r\n        ],\r\n        // checkPassword: [{ validator: validatePassword2, trigger: \"blur\",required:true}],\r\n        username:[\r\n          { required:true,message:'请输入用户名！',trigger:'blur' },\r\n           { min: 3, max: 10, message: '长度在3到10个字符', trigger: 'blur' }\r\n        ]\r\n      },\r\n      message:''\r\n    };\r\n  },\r\n  methods: {\r\n    Login(){\r\n      this.$http.post('/api/login',{\r\n        username:this.loginForm.username,\r\n        password:this.loginForm.password\r\n      }).then((res)=>{\r\n        // alert('登陆成功！');\r\n        if(res.data.status===0){\r\n              console.log('登录成功！');\r\n              alert('登录成功！')\r\n               this.$router.push('/reguser')\r\n        }else{\r\n          alert('登录失败！')\r\n          console.log(res.data.message)\r\n        }\r\n      }).catch(()=>{\r\n        // console.log()\r\n        alert('登录失败！---')\r\n      })\r\n\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n#login-box {\r\n  width: 350px;\r\n  height: 250px;\r\n  background-color: #fff;\r\n  border-radius: 10px;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  // 移动transform\r\n  transform: translate(-50%, -50%);\r\n  .login-head {\r\n    position: absolute;\r\n    width: 100px;\r\n    height: 100px;\r\n    border: 1px solid greenyellow;\r\n    border-radius: 50%;\r\n    // margin-left: 120px;\r\n    // 将盒子居中显示\r\n    left: 50%;\r\n    transform: translate(-50%);\r\n    box-shadow: 0 0 10px cyan;\r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n      border-radius: 50%;\r\n      // background-color:#2b3b6b;\r\n    }\r\n  }\r\n  // 表单样式\r\n  .fm {\r\n    //  width: 60%;\r\n    margin-top: 86px;\r\n    border: 1px solid cyan;\r\n    // 透明度\r\n    opacity: 0.81;\r\n    // 放大，缩小陪数\r\n    transform: scale(0.75, 0.75);\r\n    box-sizing: border-box;\r\n  }\r\n  .btn {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  .btn1 {\r\n    // display: flex;;\r\n    flex: 1;\r\n    // padding-right: 30px;\r\n    // justify-content: flex-end;\r\n    margin-right: 50px;\r\n    background-color: red;\r\n  }\r\n  .btn2 {\r\n    flex: 1;\r\n    margin-right: 50px;\r\n    background-color: cyan;\r\n  }\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}