{"ast":null,"code":"import _asyncToGenerator from \"D:/vscode\\u7EC3\\u4E60\\u5305/Vue\\u7535\\u5546\\u9879\\u76EE\\u5B9E\\u6218/demo-vue2.0/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"regenerator-runtime/runtime.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    var token = window.sessionStorage.getItem('token');\n    return {\n      token: token,\n      // 所有角色列表数据\n      roleList: []\n    };\n  },\n  created: function created() {\n    this.getRolesList();\n  },\n  methods: {\n    // 获取所有角色列表\n    getRolesList: function getRolesList() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _yield$axios$get, res;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get('http://127.0.0.1:8888/api/private/v1/roles', {\n                  headers: {\n                    Authorization: _this.token\n                  }\n                });\n\n              case 2:\n                _yield$axios$get = _context.sent;\n                res = _yield$axios$get.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", _this.$message.error({\n                  message: '获取角色列表失败！',\n                  center: true\n                }));\n\n              case 6:\n                // alert('获取列表成功！')\n                _this.roleList = res.data;\n                console.log(_this.roleList); // this.getRolesList = res.data\n                // console.log(this.getRolesList)\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    // 根据id删除对应的权限\n    removeRightById: function removeRightById(role, rightId) {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var confimResult, url1, _yield$axios$delete, res;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _this2.$confirm('此操作将永久删除该权限，是否继续', '提示', {\n                  confirmButtonText: '确定',\n                  cancelButtonText: '取消',\n                  type: 'warning'\n                }).catch(function (err) {\n                  return err;\n                });\n\n              case 2:\n                confimResult = _context2.sent;\n\n                if (!(confimResult !== 'confirm')) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", _this2.$message.info({\n                  message: '取消了删除!',\n                  center: true\n                }));\n\n              case 5:\n                // alert('确认了删除！')\n                // const Str = `roles/${role.id}/rights/${rightId}`\n                // const url = 'http://127.0.0.1:8888/api/private/v1' + `roles/${role.id}/rights/${rightId}`\n                url1 = \"http://127.0.0.1:8888/api/private/v1/roles/\".concat(role.id, \"/rights/\").concat(rightId);\n                _context2.next = 8;\n                return axios.delete(url1, {\n                  headers: {\n                    Authorization: _this2.token\n                  }\n                });\n\n              case 8:\n                _yield$axios$delete = _context2.sent;\n                res = _yield$axios$delete.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", _this2.$message.error({\n                  message: '删除权限失败！',\n                  center: true,\n                  duration: 3000\n                }));\n\n              case 12:\n                _this2.$message.success({\n                  message: '删除权限成功！',\n                  center: true,\n                  duration: 3000\n                }); // 重新刷新权限列表\n                // this.getRolesList()\n\n\n                role.children = res.data;\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    // 分配权限的对话框\n    showSetRightDialog: function showSetRightDialog() {}\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA;AACA;AACAA,MADA,kBACA;AACA;AACA;AACAC,kBADA;AAEA;AACAC;AAHA;AAKA,GARA;AASAC,SATA,qBASA;AACA;AACA,GAXA;AAYAC;AACA;AACAC,gBAFA,0BAEA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACAC;AAAAC;AAAAC;AAAA;AAAA,kBADA;;AAAA;AAAA;AACAC,mBADA,oBACAT,IADA;;AAAA,sBAEAS,uBAFA;AAAA;AAAA;AAAA;;AAAA,iDAGA;AACAC,sCADA;AAEAC;AAFA,kBAHA;;AAAA;AAQA;AACA;AACAC,4CAVA,CAWA;AACA;;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA,KAfA;AAgBA;AACAC,mBAjBA,2BAiBAC,IAjBA,EAiBAC,OAjBA,EAiBA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA;AACAC,yCADA;AAEAC,wCAFA;AAGAC;AAHA,mBAIAC,KAJA,CAIA;AAAA;AAAA,iBAJA,CAFA;;AAAA;AAEAC,4BAFA;;AAAA,sBAOAA,0BAPA;AAAA;AAAA;AAAA;;AAAA,kDAQA;AACAV,mCADA;AAEAC;AAFA,kBARA;;AAAA;AAaA;AACA;AACA;AACAU,oBAhBA,wDAgBAP,OAhBA,qBAgBAC,OAhBA;AAAA;AAAA,uBAiBAT;AAAAC;AAAAC;AAAA;AAAA,kBAjBA;;AAAA;AAAA;AAiBAC,mBAjBA,uBAiBAT,IAjBA;;AAAA,sBAmBAS,uBAnBA;AAAA;AAAA;AAAA;;AAAA,kDAoBA;AACAC,oCADA;AAEAC,8BAFA;AAGAW;AAHA,kBApBA;;AAAA;AA0BA;AACAZ,oCADA;AAEAC,8BAFA;AAGAW;AAHA,mBA1BA,CA+BA;AACA;;;AACAR;;AAjCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkCA,KAnDA;AAoDA;AACAS,sBArDA,gCAqDA;AArDA;AAZA","names":["data","token","roleList","created","methods","getRolesList","axios","headers","Authorization","res","message","center","console","removeRightById","role","rightId","confirmButtonText","cancelButtonText","type","catch","confimResult","url1","duration","showSetRightDialog"],"sourceRoot":"src/components/power","sources":["RolesV.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- 面包屑导航区域 -->\r\n    <el-breadcrumb separator=\"/\">\r\n      <el-breadcrumb-item :to=\"{ path: '/FirstPage' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item><a href=\"/\">用户登录</a></el-breadcrumb-item>\r\n      <el-breadcrumb-item>权限管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>角色列表</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!-- 卡片视图区域 -->\r\n    <el-card>\r\n      <!-- 添加角色按钮区域 -->\r\n      <el-row>\r\n        <el-col>\r\n          <el-button type=\"primary\">添加角色</el-button>\r\n        </el-col>\r\n        <!-- 角色权限列表区域 -->\r\n        <el-table :data=\"roleList\" border stripe>\r\n          <!-- 展开列 -->\r\n          <el-table-column type=\"expand\">\r\n            <!-- 这是放一个插槽用于存放数据 -->\r\n            <template slot-scope=\"scope\">\r\n              <el-row :class=\"['bdBottom', i1 === 0 ? 'bdTop' : '', 'vcenter']\" v-for=\"(item1, i1) in scope.row.children\" :key=\"item1.id\">\r\n                <!-- 渲染一级权限 -->\r\n                <el-col :span=\"5\">\r\n                  <el-tag closable @close=\"removeRightById(scope.row, item1.id)\">\r\n                    {{ item1.authName }}\r\n                  </el-tag>\r\n                  <i class=\"el-icon-caret-right\"></i>\r\n                </el-col>\r\n                <!-- 渲染二，三级权限 -->\r\n                <el-col :span=\"19\">\r\n                  <!-- 通过for循环嵌套渲染二级权限  -->\r\n                  <el-row :class=\"[i2 === 0 ? '' : 'bdTop', 'vcenter']\" v-for=\"(item2, i2) in item1.children\" :key=\"item2.id\">\r\n                    <el-col :span=\"6\">\r\n                      <el-tag type=\"success\" closable @close=\"removeRightById(scope.row, item2.id)\">{{ item2.authName }}</el-tag>\r\n                      <i class=\"el-icon-caret-right\"></i>\r\n                    </el-col>\r\n                    <!-- 三级权限 -->\r\n                    <el-col :span=\"18\">\r\n                      <el-tag type=\"warning\" v-for=\"item3 in item2.children\" :key=\"item3.id\" closable @close=\"removeRightById(scope.row, item3.id)\">\r\n                        {{ item3.authName }}\r\n                      </el-tag>\r\n                    </el-col>\r\n                  </el-row>\r\n                </el-col>\r\n              </el-row>\r\n            </template>\r\n          </el-table-column>\r\n          <!-- 索引列 -->\r\n          <el-table-column type=\"index\" label=\"#\"></el-table-column>\r\n          <el-table-column label=\"角色名称\" prop=\"roleName\"></el-table-column>\r\n          <el-table-column label=\"角色描述\" prop=\"roleDesc\"></el-table-column>\r\n          <el-table-column label=\"操作\" width=\"285px\">\r\n            <!-- 以插槽的形式放在这里 -->\r\n            <template slot-scope=\"\">\r\n              <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\">修改</el-button>\r\n              <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\">删除</el-button>\r\n              <el-button type=\"warning\" icon=\"el-icon-setting\" size=\"mini\" @click=\"showSetRightDialog\">分配权限</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </el-row>\r\n    </el-card>\r\n    <!-- 分配权限的对话框 -->\r\n    <el-dialog title=\"分配权限\" :visible.sync=\"setRightDialogVisible\" width=\"50%\">\r\n      <span>这是一段信息</span>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"setRightDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"setRightDialogVisible = false\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nexport default {\r\n  data() {\r\n    const token = window.sessionStorage.getItem('token')\r\n    return {\r\n      token: token,\r\n      // 所有角色列表数据\r\n      roleList: [],\r\n    }\r\n  },\r\n  created() {\r\n    this.getRolesList()\r\n  },\r\n  methods: {\r\n    // 获取所有角色列表\r\n    async getRolesList() {\r\n      const { data: res } = await axios.get('http://127.0.0.1:8888/api/private/v1/roles', { headers: { Authorization: this.token } })\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error({\r\n          message: '获取角色列表失败！',\r\n          center: true,\r\n        })\r\n      }\r\n      // alert('获取列表成功！')\r\n      this.roleList = res.data\r\n      console.log(this.roleList)\r\n      // this.getRolesList = res.data\r\n      // console.log(this.getRolesList)\r\n    },\r\n    // 根据id删除对应的权限\r\n    async removeRightById(role, rightId) {\r\n      //弹窗提示是否要删除\r\n      const confimResult = await this.$confirm('此操作将永久删除该权限，是否继续', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning',\r\n      }).catch((err) => err)\r\n      if (confimResult !== 'confirm') {\r\n        return this.$message.info({\r\n          message: '取消了删除!',\r\n          center: true,\r\n        })\r\n      }\r\n      // alert('确认了删除！')\r\n      // const Str = `roles/${role.id}/rights/${rightId}`\r\n      // const url = 'http://127.0.0.1:8888/api/private/v1' + `roles/${role.id}/rights/${rightId}`\r\n      const url1 = `http://127.0.0.1:8888/api/private/v1/roles/${role.id}/rights/${rightId}`\r\n      const { data: res } = await axios.delete(url1, { headers: { Authorization: this.token } })\r\n      // console.log(res)\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error({\r\n          message: '删除权限失败！',\r\n          center: true,\r\n          duration: 3000,\r\n        })\r\n      }\r\n      this.$message.success({\r\n        message: '删除权限成功！',\r\n        center: true,\r\n        duration: 3000,\r\n      })\r\n      // 重新刷新权限列表\r\n      // this.getRolesList()\r\n      role.children = res.data\r\n    },\r\n    // 分配权限的对话框\r\n    showSetRightDialog() {},\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.el-breadcrumb {\r\n  margin-bottom: 22px;\r\n  font-size: 17px;\r\n  font-family: cursive;\r\n}\r\n.el-card {\r\n  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.25);\r\n}\r\n.el-tag {\r\n  margin: 10px;\r\n}\r\n// 边框样式\r\n.bdTop {\r\n  border-top: 1px solid #eee;\r\n}\r\n.bdBottom {\r\n  border-bottom: 1px solid #eee;\r\n}\r\n// 垂直居中对齐\r\n.vcenter {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}