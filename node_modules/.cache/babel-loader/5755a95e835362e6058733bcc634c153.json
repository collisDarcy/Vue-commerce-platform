{"ast":null,"code":"import _asyncToGenerator from \"D:/vscode\\u7EC3\\u4E60\\u5305/Vue\\u7535\\u5546\\u9879\\u76EE\\u5B9E\\u6218/demo-vue2.0/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      // 查询条件\n      queryInfo: {\n        type: 3,\n        pagenum: 1,\n        pagesize: 5\n      },\n      // 商品分类的数据列表，默认为空\n      cateList: [],\n      total: 0,\n      // 为table指定列的定义\n      columns: [{\n        label: '分类名称',\n        prop: 'cat_name'\n      }, // 模板列----使用插槽\n      {\n        label: '是否有效',\n        // 表示将当前列定义为模板列\n        type: 'template',\n        template: 'isOk'\n      }, {\n        label: '权限等级',\n        // 表示将当前列定义为模板列\n        type: 'template',\n        template: 'order'\n      }]\n    };\n  },\n  created: function created() {\n    this.getCateList();\n  },\n  methods: {\n    // 获取商品分类的数据\n    getCateList: function getCateList() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _yield$_this$$http$ge, res;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.$http.get('categories', {\n                  params: _this.queryInfo\n                });\n\n              case 2:\n                _yield$_this$$http$ge = _context.sent;\n                res = _yield$_this$$http$ge.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", _this.$message.error({\n                  message: '获取商品分类数据失败！',\n                  center: true\n                }));\n\n              case 6:\n                _this.$message.success({\n                  message: '获取商品分类数据成功！',\n                  center: true\n                }); // 把数据列表，赋值给cateList\n\n\n                _this.cateList = res.data.result;\n                _this.total = res.data.total;\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACAA,MADA,kBACA;AACA;AACA;AACAC;AACAC,eADA;AAEAC,kBAFA;AAGAC;AAHA,OAFA;AAQA;AACAC,kBATA;AAUAC,cAVA;AAWA;AACAC,gBACA;AACAC,qBADA;AAEAC;AAFA,OADA,EAKA;AACA;AACAD,qBADA;AAEA;AACAN,wBAHA;AAIAQ;AAJA,OANA,EAYA;AACAF,qBADA;AAEA;AACAN,wBAHA;AAIAQ;AAJA,OAZA;AAZA;AAgCA,GAlCA;AAmCAC,SAnCA,qBAmCA;AACA;AACA,GArCA;AAsCAC;AACA;AACAC,eAFA,yBAEA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA;AAAAC;AAAA,kBADA;;AAAA;AAAA;AACAC,mBADA,yBACAf,IADA;;AAAA,sBAGAe,uBAHA;AAAA;AAAA;AAAA;;AAAA,iDAIA;AACAC,wCADA;AAEAC;AAFA,kBAJA;;AAAA;AASA;AACAD,wCADA;AAEAC;AAFA,mBATA,CAaA;;;AACA;AACA;;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AAlBA;AAtCA","names":["data","queryInfo","type","pagenum","pagesize","cateList","total","columns","label","prop","template","created","methods","getCateList","params","res","message","center"],"sourceRoot":"src/components/goods","sources":["CateV.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- <p>这是goods组件</p> -->\r\n    <!-- 面包屑导航 -->\r\n    <el-breadcrumb separator=\"/\">\r\n      <el-breadcrumb-item :to=\"{ path: '/FirstPage' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item><a href=\"/\">用户登录</a></el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品列表</el-breadcrumb-item>\r\n      <el-breadcrumb-item>分类参数</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品分类</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!-- 卡片视图区域 -->\r\n    <el-card>\r\n      <el-row>\r\n        <el-col>\r\n          <el-button type=\"primary\">添加分类</el-button>\r\n        </el-col>\r\n      </el-row>\r\n      <!-- 表格区域 -->\r\n      <tree-table :data=\"cateList\" :columns=\"columns\" :expand-type=\"false\" :selection-type=\"false\" show-index border>\r\n        <!-- 是否有效 -->\r\n        <template slot=\"isOk\" slot-scope=\"scope\">\r\n          <i class=\"el-icon-success\" v-if=\"scope.row.cat_deleted === false\" style=\"color: lightgreen\"></i>\r\n          <i class=\"el-icon-error\" v-else style=\"color: red\"></i>\r\n        </template>\r\n        <!-- 权限等级 -->\r\n        <template slot=\"order\" slot-scope=\"scope\">\r\n          <el-tag type=\"success\" size=\"mini\" v-if=\"scope.row.cat_level === 0\"></el-tag>\r\n        </template>\r\n      </tree-table>\r\n      <!-- 分页区域 -->\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 查询条件\r\n      queryInfo: {\r\n        type: 3,\r\n        pagenum: 1,\r\n        pagesize: 5,\r\n      },\r\n\r\n      // 商品分类的数据列表，默认为空\r\n      cateList: [],\r\n      total: 0,\r\n      // 为table指定列的定义\r\n      columns: [\r\n        {\r\n          label: '分类名称',\r\n          prop: 'cat_name',\r\n        },\r\n        // 模板列----使用插槽\r\n        {\r\n          label: '是否有效',\r\n          // 表示将当前列定义为模板列\r\n          type: 'template',\r\n          template: 'isOk',\r\n        },\r\n        {\r\n          label: '权限等级',\r\n          // 表示将当前列定义为模板列\r\n          type: 'template',\r\n          template: 'order',\r\n        },\r\n      ],\r\n    }\r\n  },\r\n  created() {\r\n    this.getCateList()\r\n  },\r\n  methods: {\r\n    // 获取商品分类的数据\r\n    async getCateList() {\r\n      const { data: res } = await this.$http.get('categories', { params: this.queryInfo })\r\n      // console.log(res)\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error({\r\n          message: '获取商品分类数据失败！',\r\n          center: true,\r\n        })\r\n      }\r\n      this.$message.success({\r\n        message: '获取商品分类数据成功！',\r\n        center: true,\r\n      })\r\n      // 把数据列表，赋值给cateList\r\n      this.cateList = res.data.result\r\n      this.total = res.data.total\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.el-breadcrumb {\r\n  margin-bottom: 22px;\r\n  font-size: 17px;\r\n  font-family: cursive;\r\n}\r\n.el-card {\r\n  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.25);\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}