{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data() {\n    // document.querySelector('.list').classList.remove('.el-breadcrumb__inner')\n    return {\n      queryInfo: {\n        query: '',\n        // 查询参数\n        pagenum: 1,\n        //当前页码\n        pagesize: 10 // 每页显示条数\n\n      },\n      // 商品列表\n      goodsList: [],\n      // 总数据条数\n      total: 0\n    };\n  },\n\n  created() {\n    this.getGoodsList();\n  },\n\n  methods: {\n    // 根据分页获取对应的商品列表\n    async getGoodsList() {\n      const {\n        data: res\n      } = await this.$http.get('goods', {\n        params: this.queryInfo\n      });\n\n      if (res.meta.status !== 200) {\n        return this.$message.error({\n          message: '获取商品列表失败！',\n          center: true\n        });\n      }\n\n      this.$message.success({\n        message: '获取商品列表成功！',\n        center: true\n      });\n      this.goodsList = res.data.goods;\n      this.total = res.data.total;\n    },\n\n    handleSizeChange(newSize) {\n      this.queryInfo.pagesize = newSize;\n      this.getGoodsList();\n    },\n\n    handleCurrentChange(newPage) {\n      this.queryInfo.pagenum = newPage;\n      this.getGoodsList();\n    },\n\n    // 删除商品\n    async removeById(id) {\n      const confirmResult = await this.$confirm('此操作将永久删除该商品，是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).catch(err => err); // 删除取消\n\n      if (confirmResult !== 'confirm') {\n        return this.$message.info({\n          message: '已经取消删除！',\n          center: true\n        });\n      } //删除成功！\n\n\n      const {\n        data: res\n      } = await this.$http.delete(`goods/${id}`);\n\n      if (res.meta.status !== 200) {\n        return this.$message.error({\n          message: '删除失败！',\n          center: true\n        });\n      }\n\n      this.$message.success({\n        message: '删除成功！',\n        center: true\n      });\n      this.getGoodsList();\n    },\n\n    // 添加商品\n    goAddpage() {\n      this.$router.push('/goods/add');\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;AACAA;AACA;AACA;AACAC;AACAC,iBADA;AACA;AACAC,kBAFA;AAEA;AACAC,oBAHA,CAGA;;AAHA,OADA;AAMA;AACAC,mBAPA;AAQA;AACAC;AATA;AAWA,GAdA;;AAeAC;AACA;AACA,GAjBA;;AAkBAC;AACA;AACA;AACA;AAAAR;AAAA;AAAAS;AAAA;;AACA;AACA;AACAC,8BADA;AAEAC;AAFA;AAIA;;AACA;AACAD,4BADA;AAEAC;AAFA;AAKA;AACA;AACA,KAjBA;;AAkBAC;AACA;AACA;AACA,KArBA;;AAsBAC;AACA;AACA;AACA,KAzBA;;AA0BA;AACA;AACA;AACAC,+BADA;AAEAC,8BAFA;AAGAC;AAHA,SAIAC,KAJA,CAIAC,UAJA,EADA,CAMA;;AACA;AACA;AACAR,4BADA;AAEAC;AAFA;AAIA,OAZA,CAaA;;;AACA;AAAAX;AAAA;;AACA;AACA;AACAU,0BADA;AAEAC;AAFA;AAIA;;AACA;AACAD,wBADA;AAEAC;AAFA;AAIA;AACA,KArDA;;AAsDA;AACAQ;AACA;AACA;;AAzDA;AAlBA","names":["data","queryInfo","query","pagenum","pagesize","goodsList","total","created","methods","params","message","center","handleSizeChange","handleCurrentChange","confirmButtonText","cancelButtonText","type","catch","err","goAddpage"],"sourceRoot":"src/components/goods","sources":["goods_List.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- <p>这是商品列表组件</p> -->\r\n    <!-- 面包屑导航 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/FirstPage' }\">首页</el-breadcrumb-item>\r\n      <!-- <el-breadcrumb-item><a href=\"/\">用户登录</a></el-breadcrumb-item> -->\r\n      <el-breadcrumb-item class=\"list\">商品列表</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品分类</el-breadcrumb-item>\r\n      <el-breadcrumb-item>分类参数</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!-- 卡片视图区域 -->\r\n    <el-card>\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"8\">\r\n          <el-input placeholder=\"请输入内容\" v-model=\"queryInfo.query\" clearable @keydown.enter.native=\"getGoodsList\" @clear=\"getGoodsList\">\r\n            <el-button slot=\"append\" icon=\"el-icon-search\" width=\"60px\" @click=\"getGoodsList\"></el-button>\r\n          </el-input>\r\n        </el-col>\r\n        <el-col :span=\"4\">\r\n          <el-button type=\"primary\" @click=\"goAddpage\">添加商品</el-button>\r\n        </el-col>\r\n      </el-row>\r\n      <!-- table表格区域 -->\r\n      <el-table :data=\"goodsList\" border stripe>\r\n        <el-table-column type=\"index\" label=\"#\"></el-table-column>\r\n        <el-table-column label=\"商品名称\" prop=\"goods_name\"></el-table-column>\r\n        <el-table-column label=\"商品价格(元)\" prop=\"goods_price\" width=\"75px\"></el-table-column>\r\n        <el-table-column label=\"商品重量\" prop=\"goods_weight\" width=\"80px\"></el-table-column>\r\n        <el-table-column label=\"创建时间\" prop=\"add_time\" width=\"140px\">\r\n          <template slot-scope=\"scope\">\r\n            <!-- {{ scope.row.add_time | dataFormat }} -->\r\n            {{ scope.row.add_time }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"180px\">\r\n          <template slot-scope=\"scope\">\r\n            <!-- {{ scope.row }} -->\r\n            <el-button type=\"primary\" size=\"mini\" icon=\"el-icon-edit\">修改</el-button>\r\n            <el-button type=\"danger\" size=\"mini\" icon=\"el-icon-delete\" @click=\"removeById(scope.row.goods_id)\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <!-- 分页区域 -->\r\n      <el-pagination background @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page.sync=\"queryInfo.pagenum\" :page-sizes=\"[10, 20, 30, 40]\" :page-size=\"queryInfo.pagesize\" layout=\"sizes, prev, pager, next\" :total=\"total\"> </el-pagination>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    // document.querySelector('.list').classList.remove('.el-breadcrumb__inner')\r\n    return {\r\n      queryInfo: {\r\n        query: '', // 查询参数\r\n        pagenum: 1, //当前页码\r\n        pagesize: 10, // 每页显示条数\r\n      },\r\n      // 商品列表\r\n      goodsList: [],\r\n      // 总数据条数\r\n      total: 0,\r\n    }\r\n  },\r\n  created() {\r\n    this.getGoodsList()\r\n  },\r\n  methods: {\r\n    // 根据分页获取对应的商品列表\r\n    async getGoodsList() {\r\n      const { data: res } = await this.$http.get('goods', { params: this.queryInfo })\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error({\r\n          message: '获取商品列表失败！',\r\n          center: true,\r\n        })\r\n      }\r\n      this.$message.success({\r\n        message: '获取商品列表成功！',\r\n        center: true,\r\n      })\r\n      console.log(res.data)\r\n      this.goodsList = res.data.goods\r\n      this.total = res.data.total\r\n    },\r\n    handleSizeChange(newSize) {\r\n      this.queryInfo.pagesize = newSize\r\n      this.getGoodsList()\r\n    },\r\n    handleCurrentChange(newPage) {\r\n      this.queryInfo.pagenum = newPage\r\n      this.getGoodsList()\r\n    },\r\n    // 删除商品\r\n    async removeById(id) {\r\n      const confirmResult = await this.$confirm('此操作将永久删除该商品，是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning',\r\n      }).catch((err) => err)\r\n      // 删除取消\r\n      if (confirmResult !== 'confirm') {\r\n        return this.$message.info({\r\n          message: '已经取消删除！',\r\n          center: true,\r\n        })\r\n      }\r\n      //删除成功！\r\n      const { data: res } = await this.$http.delete(`goods/${id}`)\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error({\r\n          message: '删除失败！',\r\n          center: true,\r\n        })\r\n      }\r\n      this.$message.success({\r\n        message: '删除成功！',\r\n        center: true,\r\n      })\r\n      this.getGoodsList()\r\n    },\r\n    // 添加商品\r\n    goAddpage() {\r\n      this.$router.push('/goods/add')\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.el-breadcrumb {\r\n  margin-bottom: 22px;\r\n  font-size: 17px;\r\n  font-family: cursive;\r\n}\r\n.el-card {\r\n  margin-top: 18px;\r\n  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.25);\r\n}\r\n/deep/.list {\r\n  color: red;\r\n  font-size: 18px;\r\n  font-family: kaiti;\r\n  font-weight: bolder;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}